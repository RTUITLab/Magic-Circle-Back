// Code generated by entc, DO NOT EDIT.

package variant

const (
	// Label holds the string label denoting the variant type in the database.
	Label = "variant"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDirectionID holds the string denoting the direction_id field in the database.
	FieldDirectionID = "direction_id"
	// FieldProfileID holds the string denoting the profile_id field in the database.
	FieldProfileID = "profile_id"
	// FieldInsituteID holds the string denoting the insitute_id field in the database.
	FieldInsituteID = "insitute_id"
	// EdgeInsitute holds the string denoting the insitute edge name in mutations.
	EdgeInsitute = "Insitute"
	// EdgeDirection holds the string denoting the direction edge name in mutations.
	EdgeDirection = "Direction"
	// EdgeProfile holds the string denoting the profile edge name in mutations.
	EdgeProfile = "Profile"
	// EdgeAdjacentTables holds the string denoting the adjacenttables edge name in mutations.
	EdgeAdjacentTables = "AdjacentTables"
	// Table holds the table name of the variant in the database.
	Table = "Variant"
	// InsituteTable is the table that holds the Insitute relation/edge.
	InsituteTable = "Variant"
	// InsituteInverseTable is the table name for the Institute entity.
	// It exists in this package in order to avoid circular dependency with the "institute" package.
	InsituteInverseTable = "Institute"
	// InsituteColumn is the table column denoting the Insitute relation/edge.
	InsituteColumn = "insitute_id"
	// DirectionTable is the table that holds the Direction relation/edge.
	DirectionTable = "Variant"
	// DirectionInverseTable is the table name for the Direction entity.
	// It exists in this package in order to avoid circular dependency with the "direction" package.
	DirectionInverseTable = "Direction"
	// DirectionColumn is the table column denoting the Direction relation/edge.
	DirectionColumn = "direction_id"
	// ProfileTable is the table that holds the Profile relation/edge.
	ProfileTable = "Variant"
	// ProfileInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileInverseTable = "Profile"
	// ProfileColumn is the table column denoting the Profile relation/edge.
	ProfileColumn = "profile_id"
	// AdjacentTablesTable is the table that holds the AdjacentTables relation/edge.
	AdjacentTablesTable = "AdjacentTable"
	// AdjacentTablesInverseTable is the table name for the AdjacentTable entity.
	// It exists in this package in order to avoid circular dependency with the "adjacenttable" package.
	AdjacentTablesInverseTable = "AdjacentTable"
	// AdjacentTablesColumn is the table column denoting the AdjacentTables relation/edge.
	AdjacentTablesColumn = "variant_id"
)

// Columns holds all SQL columns for variant fields.
var Columns = []string{
	FieldID,
	FieldDirectionID,
	FieldProfileID,
	FieldInsituteID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
