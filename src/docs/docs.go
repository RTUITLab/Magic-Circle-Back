// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to create only institute you need to put into body only name of institute according to schema\nto create some relation you need to put to institute id and put into direction name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create institute or direction or profile",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/root.CreateInstDirProf"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/root.CreateInstDirProfResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete relate between profile and sectors",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/root.DeleteRelateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/auth/admin": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "get admins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.GetAdminsResp"
                        }
                    }
                }
            }
        },
        "/v1/auth/admin/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "superadmin can pass only new password\nadmin change only their password and should pass their old password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "change admin password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "admin id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ChangePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "delete admin",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/auth/admin/{intstitute_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "create admin",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.CreateAdminReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "id of institute",
                        "name": "intstitute_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/auth.CreateAdminResp"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login admin or super admin",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResp"
                        }
                    }
                }
            }
        },
        "/v1/auth/refreshToken": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login admin or super admin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResp"
                        }
                    }
                }
            }
        },
        "/v1/auth/superadmin": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "get admins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.GetAdminsResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "create super admin",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.CreateAdminReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.CreateAdminResp"
                        }
                    }
                }
            }
        },
        "/v1/auth/superadmin/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "delete super admin",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/direction": {
            "get": {
                "description": "return all directions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "direction"
                ],
                "summary": "Get all directions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/direction.GetDirectionsResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/direction/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update direction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "direction"
                ],
                "summary": "Update dirction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of direction",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/direction.UpdateDirectionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/direction.UpdateDirectionResp"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Direction by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "direction"
                ],
                "summary": "Delete Direction by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of institute",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/institute": {
            "get": {
                "description": "return all institutes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "institute"
                ],
                "summary": "Get all institutes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/institute.GetInstitutesResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/institute/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update institute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "institute"
                ],
                "summary": "Update institute",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of institute",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/institute.UpdateInstituteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/institute.UpdateInstituteResp"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Institute by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "institute"
                ],
                "summary": "Delete Institute by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of institute",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/profile": {
            "get": {
                "description": "return all profiles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get all profiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.GetAllProfilesResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/profile/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of profile",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.UpdateProfileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.UpdateProfileResp"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete profile by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Delete profile by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of profile",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/sector": {
            "get": {
                "description": "return all sectors\nquey params can make a logical predicates for example\nrequest: \"/sectors?instutute=1+2\u0026profile=1\" equal \"WHERE (institute_id=1 and profile_id=1) or institute_id=2\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sector"
                ],
                "summary": "Get Sectors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "institute name",
                        "name": "institute",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "direction name",
                        "name": "direction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profile",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sector.GetAllSectorsResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create sector according to giving coords\ncoords is unique string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sector"
                ],
                "summary": "Create Sector",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sector.CreateSectorReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sector.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/sector/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update sector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sector"
                ],
                "summary": "Update Sector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of sector",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sector.UpdateSectorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sector.Sector"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete sector and all adjacenttables that relate with this sector",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sector"
                ],
                "summary": "Delete Sector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of sector",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/sector/{sector_id}/profile/{profile_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sector"
                ],
                "summary": "Update additional description",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of sector",
                        "name": "sector_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id of propfile",
                        "name": "profile_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sector.AddAdditionalDescriptionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sector.AdditionalDescription"
                        }
                    }
                }
            }
        },
        "/v1/sectors": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create sectors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sector"
                ],
                "summary": "Create Sectors",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sector.CreateSectorReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sector.Sector"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ChangePasswordReq": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "auth.CreateAdminReq": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.CreateAdminResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "intstituteId": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "auth.GetAdminResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "auth.GetAdminsResp": {
            "type": "object",
            "properties": {
                "admins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth.GetAdminResp"
                    }
                }
            }
        },
        "auth.LoginReq": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResp": {
            "type": "object",
            "properties": {
                "expire": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "direction.Direction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/profile.Profile"
                    }
                }
            }
        },
        "direction.GetDirectionsResp": {
            "type": "object",
            "properties": {
                "directions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/direction.Direction"
                    }
                }
            }
        },
        "direction.UpdateDirectionReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "direction.UpdateDirectionResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "institute.GetInstitutesResp": {
            "type": "object",
            "properties": {
                "institutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/institute.Institute"
                    }
                }
            }
        },
        "institute.Institute": {
            "type": "object",
            "properties": {
                "directions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/direction.Direction"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "institute.UpdateInstituteReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "institute.UpdateInstituteResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "profile.GetAllProfilesResp": {
            "type": "object",
            "properties": {
                "profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/profile.Profile"
                    }
                }
            }
        },
        "profile.Profile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "profile.UpdateProfileReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "profile.UpdateProfileResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "root.CreateInstDirProf": {
            "type": "object",
            "properties": {
                "direction": {
                    "$ref": "#/definitions/root.GetOrCreateReq"
                },
                "institute": {
                    "$ref": "#/definitions/root.GetOrCreateReq"
                },
                "profile": {
                    "$ref": "#/definitions/root.GetOrCreateReq"
                },
                "sectors": {
                    "$ref": "#/definitions/root.Sectors"
                }
            }
        },
        "root.CreateInstDirProfResp": {
            "type": "object",
            "properties": {
                "direction": {
                    "$ref": "#/definitions/root.CreatedDirection"
                },
                "institute": {
                    "$ref": "#/definitions/root.CreatedInstitute"
                },
                "profile": {
                    "$ref": "#/definitions/root.CreatedProfile"
                }
            }
        },
        "root.CreatedDirection": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "root.CreatedInstitute": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "root.CreatedProfile": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "root.DeleteRelateReq": {
            "type": "object",
            "properties": {
                "profile_id": {
                    "type": "integer"
                },
                "sectors": {
                    "$ref": "#/definitions/root.Sectors"
                }
            }
        },
        "root.GetOrCreateReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "root.Sectors": {
            "type": "object",
            "properties": {
                "coords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "sector.AddAdditionalDescriptionReq": {
            "type": "object",
            "properties": {
                "additionalDescription": {
                    "type": "string"
                }
            }
        },
        "sector.AdditionalDescription": {
            "type": "object",
            "properties": {
                "additionalDescription": {
                    "type": "string"
                },
                "direction": {
                    "$ref": "#/definitions/sector.Direction"
                },
                "institute": {
                    "$ref": "#/definitions/sector.Institute"
                },
                "profile": {
                    "$ref": "#/definitions/sector.Profile"
                }
            }
        },
        "sector.CreateSectorReq": {
            "type": "object",
            "properties": {
                "coords": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "sector.Direction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "sector.GetAllSectorsResp": {
            "type": "object",
            "properties": {
                "sectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sector.Sector"
                    }
                }
            }
        },
        "sector.Institute": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "sector.Profile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "sector.Sector": {
            "type": "object",
            "properties": {
                "additionalDescriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sector.AdditionalDescription"
                    }
                },
                "coords": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "sector.UpdateSectorReq": {
            "type": "object",
            "properties": {
                "coords": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/magic-circle",
	Schemes:          []string{},
	Title:            "Magic-Circle API",
	Description:      "This is a server to get projects from github",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
