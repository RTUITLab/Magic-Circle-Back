basePath: /api/magic-circle
definitions:
  direction.Direction:
    properties:
      id:
        type: integer
      name:
        type: string
      profiles:
        items:
          $ref: '#/definitions/profile.Profile'
        type: array
    type: object
  direction.GetDirectionsResp:
    properties:
      directions:
        items:
          $ref: '#/definitions/direction.Direction'
        type: array
    type: object
  direction.UpdateDirectionReq:
    properties:
      name:
        type: string
    type: object
  direction.UpdateDirectionResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  institute.GetInstitutesResp:
    properties:
      institutes:
        items:
          $ref: '#/definitions/institute.Institute'
        type: array
    type: object
  institute.Institute:
    properties:
      directions:
        items:
          $ref: '#/definitions/direction.Direction'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  institute.UpdateInstituteReq:
    properties:
      name:
        type: string
    type: object
  institute.UpdateInstituteResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  profile.GetAllProfilesResp:
    properties:
      profiles:
        items:
          $ref: '#/definitions/profile.Profile'
        type: array
    type: object
  profile.Profile:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  profile.UpdateProfileReq:
    properties:
      name:
        type: string
    type: object
  profile.UpdateProfileResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  root.CreateInstDirProf:
    properties:
      direction:
        $ref: '#/definitions/root.GetOrCreateReq'
      institute:
        $ref: '#/definitions/root.GetOrCreateReq'
      profile:
        $ref: '#/definitions/root.GetOrCreateReq'
      sectors:
        $ref: '#/definitions/root.Sectors'
    type: object
  root.CreateInstDirProfResp:
    properties:
      direction:
        $ref: '#/definitions/root.CreatedDirection'
      institute:
        $ref: '#/definitions/root.CreatedInstitute'
      profile:
        $ref: '#/definitions/root.CreatedProfile'
    type: object
  root.CreatedDirection:
    properties:
      ID:
        type: integer
      name:
        type: string
    type: object
  root.CreatedInstitute:
    properties:
      ID:
        type: integer
      name:
        type: string
    type: object
  root.CreatedProfile:
    properties:
      ID:
        type: integer
      name:
        type: string
    type: object
  root.DeleteRelateReq:
    properties:
      profile_id:
        type: integer
      sectors:
        $ref: '#/definitions/root.Sectors'
    type: object
  root.GetOrCreateReq:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  root.Sectors:
    properties:
      coords:
        items:
          type: string
        type: array
    type: object
  sector.CreateSectorReq:
    properties:
      coords:
        type: string
      description:
        type: string
    type: object
  sector.GetAllSectorsResp:
    properties:
      sectors:
        items:
          $ref: '#/definitions/sector.Sector'
        type: array
    type: object
  sector.Sector:
    properties:
      coords:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  sector.UpdateSectorReq:
    properties:
      coords:
        type: string
      description:
        type: string
    type: object
info:
  contact: {}
  description: This is a server to get projects from github
  title: Magic-Circle API
  version: "1.0"
paths:
  /v1/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/root.DeleteRelateReq'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: ""
      summary: delete relate between profile and sectors
    post:
      consumes:
      - application/json
      description: |-
        to create only institute you need to put into body only name of institute according to schema
        to create some relation you need to put to institute id and put into direction name
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/root.CreateInstDirProf'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/root.CreateInstDirProfResp'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: ""
      summary: create institute or direction or profile
  /v1/direction:
    get:
      description: return all directions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/direction.GetDirectionsResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all directions
  /v1/direction/{id}:
    delete:
      description: Delete Direction by id
      parameters:
      - description: id of institute
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Direction by id
    put:
      consumes:
      - application/json
      description: update direction
      parameters:
      - description: id of direction
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/direction.UpdateDirectionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/direction.UpdateDirectionResp'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update dirction
  /v1/institute:
    get:
      description: return all institutes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/institute.GetInstitutesResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all institutes
  /v1/institute/{id}:
    delete:
      description: Delete Institute by id
      parameters:
      - description: id of institute
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Institute by id
    put:
      consumes:
      - application/json
      description: update institute
      parameters:
      - description: id of institute
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/institute.UpdateInstituteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/institute.UpdateInstituteResp'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update institute
  /v1/profile:
    get:
      description: return all profiles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.GetAllProfilesResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all profiles
  /v1/profile/{id}:
    delete:
      description: Delete profile by id
      parameters:
      - description: id of profile
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete profile by id
    put:
      consumes:
      - application/json
      description: update profile
      parameters:
      - description: id of profile
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/profile.UpdateProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.UpdateProfileResp'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update profile
  /v1/sector:
    get:
      description: |-
        return all sectors
        quey params can make a logical predicates for example
        request: "/sectors?instutute=1+2&profile=1" equal "WHERE (institute_id=1 and profile_id=1) or institute_id=2"
      parameters:
      - description: institute name
        in: query
        name: institute
        type: string
      - description: direction name
        in: query
        name: direction
        type: string
      - description: profile name
        in: query
        name: profile
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sector.GetAllSectorsResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Sectors
    post:
      consumes:
      - application/json
      description: |-
        create sector according to giving coords
        coords is unique string
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/sector.CreateSectorReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sector.Sector'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create Sector
  /v1/sector/{id}:
    delete:
      description: delete sector and all adjacenttables that relate with this sector
      parameters:
      - description: id of sector
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Sector
    put:
      consumes:
      - application/json
      description: update sector
      parameters:
      - description: id of sector
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/sector.UpdateSectorReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sector.Sector'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update Sector
  /v1/sectors:
    post:
      consumes:
      - application/json
      description: create sectors
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/sector.CreateSectorReq'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/sector.Sector'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create Sectors
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
