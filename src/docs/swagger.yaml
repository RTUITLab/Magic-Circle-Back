basePath: /api/magic-circle
definitions:
  auth.ChangePasswordReq:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  auth.CreateAdminReq:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  auth.CreateAdminResp:
    properties:
      id:
        type: integer
      intstituteId:
        type: integer
      login:
        type: string
    type: object
  auth.GetAdminResp:
    properties:
      id:
        type: integer
      institute_id:
        type: integer
      login:
        type: string
    type: object
  auth.GetAdminsResp:
    properties:
      admins:
        items:
          $ref: '#/definitions/auth.GetAdminResp'
        type: array
    type: object
  auth.LoginReq:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  auth.LoginResp:
    properties:
      expire:
        type: string
      instituteId:
        type: integer
      login:
        type: string
      role:
        enum:
        - admin
        - super.admin
        type: string
      token:
        type: string
    type: object
  direction.Direction:
    properties:
      id:
        type: integer
      name:
        type: string
      profiles:
        items:
          $ref: '#/definitions/profile.Profile'
        type: array
    type: object
  direction.GetDirectionsResp:
    properties:
      directions:
        items:
          $ref: '#/definitions/direction.Direction'
        type: array
    type: object
  direction.UpdateDirectionReq:
    properties:
      name:
        type: string
    type: object
  direction.UpdateDirectionResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  institute.GetInstitutesResp:
    properties:
      institutes:
        items:
          $ref: '#/definitions/institute.Institute'
        type: array
    type: object
  institute.Institute:
    properties:
      directions:
        items:
          $ref: '#/definitions/direction.Direction'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  institute.UpdateInstituteReq:
    properties:
      name:
        type: string
    type: object
  institute.UpdateInstituteResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  profile.GetAllProfilesResp:
    properties:
      profiles:
        items:
          $ref: '#/definitions/profile.Profile'
        type: array
    type: object
  profile.Profile:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  profile.UpdateProfileReq:
    properties:
      name:
        type: string
    type: object
  profile.UpdateProfileResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  root.CreateInstDirProf:
    properties:
      direction:
        $ref: '#/definitions/root.GetOrCreateReq'
      institute:
        $ref: '#/definitions/root.GetOrCreateReq'
      profile:
        $ref: '#/definitions/root.GetOrCreateReq'
      sectors:
        $ref: '#/definitions/root.Sectors'
    type: object
  root.CreateInstDirProfResp:
    properties:
      direction:
        $ref: '#/definitions/root.CreatedDirection'
      institute:
        $ref: '#/definitions/root.CreatedInstitute'
      profile:
        $ref: '#/definitions/root.CreatedProfile'
    type: object
  root.CreatedDirection:
    properties:
      ID:
        type: integer
      name:
        type: string
    type: object
  root.CreatedInstitute:
    properties:
      ID:
        type: integer
      name:
        type: string
    type: object
  root.CreatedProfile:
    properties:
      ID:
        type: integer
      name:
        type: string
    type: object
  root.DeleteRelateReq:
    properties:
      profile_id:
        type: integer
      sectors:
        $ref: '#/definitions/root.Sectors'
    type: object
  root.GetOrCreateReq:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  root.Sectors:
    properties:
      coords:
        items:
          type: string
        type: array
    type: object
  sector.AddAdditionalDescriptionReq:
    properties:
      additionalDescription:
        type: string
    type: object
  sector.AdditionalDescription:
    properties:
      additionalDescription:
        type: string
      institute:
        $ref: '#/definitions/sector.Institute'
    type: object
  sector.CreateSectorReq:
    properties:
      coords:
        type: string
      description:
        type: string
    type: object
  sector.GetAllSectorsResp:
    properties:
      sectors:
        items:
          $ref: '#/definitions/sector.Sector'
        type: array
    type: object
  sector.Institute:
    properties:
      directions:
        items:
          $ref: '#/definitions/direction.Direction'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  sector.Sector:
    properties:
      additionalDescriptions:
        items:
          $ref: '#/definitions/sector.AdditionalDescription'
        type: array
      coords:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  sector.UpdateSectorReq:
    properties:
      coords:
        type: string
      description:
        type: string
    type: object
info:
  contact: {}
  description: This is a server to get projects from github
  title: Magic-Circle API
  version: "1.0"
paths:
  /v1/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/root.DeleteRelateReq'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: delete relate between profile and sectors
    post:
      consumes:
      - application/json
      description: |-
        to create only institute you need to put into body only name of institute according to schema
        to create some relation you need to put to institute id and put into direction name
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/root.CreateInstDirProf'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/root.CreateInstDirProfResp'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: create institute or direction or profile
  /v1/auth/admin:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.GetAdminsResp'
      security:
      - ApiKeyAuth: []
      summary: get admins
      tags:
      - auth
  /v1/auth/admin/{id}:
    delete:
      parameters:
      - description: id of admin
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: delete admin
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: |-
        superadmin can pass only new password
        admin change only their password and should pass their old password
      parameters:
      - description: admin id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.ChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: change admin password
      tags:
      - auth
  /v1/auth/admin/{intstitute_id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.CreateAdminReq'
      - description: id of institute
        in: path
        name: intstitute_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.CreateAdminResp'
      security:
      - ApiKeyAuth: []
      summary: create admin
      tags:
      - auth
  /v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResp'
      summary: login admin or super admin
      tags:
      - auth
  /v1/auth/refreshToken:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResp'
      security:
      - ApiKeyAuth: []
      summary: login admin or super admin
      tags:
      - auth
  /v1/auth/superadmin:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.GetAdminsResp'
      security:
      - ApiKeyAuth: []
      summary: get admins
      tags:
      - auth
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.CreateAdminReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.CreateAdminResp'
      security:
      - ApiKeyAuth: []
      summary: create super admin
      tags:
      - auth
  /v1/auth/superadmin/{id}:
    delete:
      parameters:
      - description: id of superadmin
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: delete super admin
      tags:
      - auth
  /v1/direction:
    get:
      description: return all directions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/direction.GetDirectionsResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all directions
      tags:
      - direction
  /v1/direction/{id}:
    delete:
      description: Delete Direction by id
      parameters:
      - description: id of institute
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Direction by id
      tags:
      - direction
    put:
      consumes:
      - application/json
      description: update direction
      parameters:
      - description: id of direction
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/direction.UpdateDirectionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/direction.UpdateDirectionResp'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update dirction
      tags:
      - direction
  /v1/institute:
    get:
      description: return all institutes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/institute.GetInstitutesResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all institutes
      tags:
      - institute
  /v1/institute/{id}:
    delete:
      description: Delete Institute by id
      parameters:
      - description: id of institute
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Institute by id
      tags:
      - institute
    put:
      consumes:
      - application/json
      description: update institute
      parameters:
      - description: id of institute
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/institute.UpdateInstituteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/institute.UpdateInstituteResp'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update institute
      tags:
      - institute
  /v1/profile:
    get:
      description: return all profiles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.GetAllProfilesResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all profiles
      tags:
      - profile
  /v1/profile/{id}:
    delete:
      description: Delete profile by id
      parameters:
      - description: id of profile
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete profile by id
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: update profile
      parameters:
      - description: id of profile
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/profile.UpdateProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.UpdateProfileResp'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update profile
      tags:
      - profile
  /v1/sector:
    get:
      description: |-
        return all sectors
        quey params can make a logical predicates for example
        request: "/sectors?instutute=1+2&profile=1" equal "WHERE (institute_id=1 and profile_id=1) or institute_id=2"
      parameters:
      - description: institute name
        in: query
        name: institute
        type: string
      - description: direction name
        in: query
        name: direction
        type: string
      - description: profile name
        in: query
        name: profile
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sector.GetAllSectorsResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Sectors
      tags:
      - sector
    post:
      consumes:
      - application/json
      description: |-
        create sector according to giving coords
        coords is unique string
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/sector.CreateSectorReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sector.Sector'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Sector
      tags:
      - sector
  /v1/sector/{id}:
    delete:
      description: delete sector and all adjacenttables that relate with this sector
      parameters:
      - description: id of sector
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Sector
      tags:
      - sector
    put:
      consumes:
      - application/json
      description: update sector
      parameters:
      - description: id of sector
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/sector.UpdateSectorReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sector.Sector'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update Sector
      tags:
      - sector
  /v1/sector/{sector_id}/profile/{profile_id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id of sector
        in: path
        name: sector_id
        required: true
        type: integer
      - description: id of propfile
        in: path
        name: profile_id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/sector.AddAdditionalDescriptionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sector.AdditionalDescription'
      security:
      - ApiKeyAuth: []
      summary: Update additional description
      tags:
      - sector
  /v1/sectors:
    post:
      consumes:
      - application/json
      description: create sectors
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/sector.CreateSectorReq'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/sector.Sector'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Sectors
      tags:
      - sector
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
