basePath: /api/magic-circle
definitions:
  adjacenttable.CreateAdjacentTableReq:
    properties:
      directionName:
        type: string
      instituteName:
        type: string
      profileName:
        type: string
      sector:
        $ref: '#/definitions/adjacenttable.CreateSectorReq'
    type: object
  adjacenttable.CreateAdjacentTableResp:
    properties:
      id:
        type: integer
      sector:
        $ref: '#/definitions/adjacenttable.Sector'
      variant:
        $ref: '#/definitions/adjacenttable.Variant'
    type: object
  adjacenttable.CreateSectorReq:
    properties:
      coords:
        type: string
      description:
        type: string
        x-nullable: true
    type: object
  adjacenttable.Sector:
    properties:
      coords:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  adjacenttable.Variant:
    properties:
      direction:
        $ref: '#/definitions/variant.Direction'
      id:
        type: integer
      institute:
        $ref: '#/definitions/variant.Institute'
      profile:
        $ref: '#/definitions/variant.Profile'
    type: object
  direction.Direction:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  direction.GetDirectionsResp:
    properties:
      directions:
        items:
          $ref: '#/definitions/direction.Direction'
        type: array
    type: object
  institute.GetInstitutesResp:
    properties:
      institutes:
        items:
          $ref: '#/definitions/institute.Institute'
        type: array
    type: object
  institute.Institute:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  profile.GetAllProfilesResp:
    properties:
      profiles:
        items:
          $ref: '#/definitions/profile.Profile'
        type: array
    type: object
  profile.Profile:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  sector.CreateSectorReq:
    properties:
      coords:
        type: string
      description:
        type: string
    type: object
  sector.GetAllSectorsResp:
    properties:
      sectors:
        items:
          $ref: '#/definitions/sector.Sector'
        type: array
    type: object
  sector.Sector:
    properties:
      coords:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  sector.UpdateSectorReq:
    properties:
      coords:
        type: string
      description:
        type: string
    type: object
  variant.Direction:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  variant.Institute:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  variant.Profile:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
  description: This is a server to get projects from github
  title: Magic-Circle API
  version: "1.0"
paths:
  /v1/adjacenttable:
    post:
      consumes:
      - application/json
      description: |-
        Create adjacent table
        you can create sector with this method just add description and coords to sector field
        also you can just add coords fields and they will find sector
        this endpoint also can get or create institute/profile/direction by name, because all names in this object is unique string
        if adjacent table with this sector and variant exist return bad request
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/adjacenttable.CreateAdjacentTableReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/adjacenttable.CreateAdjacentTableResp'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create
  /v1/direction:
    get:
      description: return all directions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/direction.GetDirectionsResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all directions
  /v1/institute:
    get:
      description: return all institutes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/institute.GetInstitutesResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all institutes
  /v1/profiles:
    get:
      description: return all profiles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.GetAllProfilesResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all profiles
  /v1/sector:
    get:
      consumes:
      - application/json
      description: return all sectors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sector.GetAllSectorsResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Sectors
    post:
      consumes:
      - application/json
      description: |-
        create sector according to giving coords
        coords is unique string
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/sector.CreateSectorReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sector.Sector'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create Sector
  /v1/sector/{id}:
    put:
      consumes:
      - application/json
      description: update sector
      parameters:
      - description: id of sector
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/sector.UpdateSectorReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sector.Sector'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update Sector
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
